@{
    ViewData["Title"] = "Kết Quả Tìm Kiếm";
    Layout = "_Layout";
}

@model List<ThuongMaiDienTu.Models.SanPham>

<link href="~/css/TimKiem.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<main>
    <div class="container">
        @if (ViewBag.IsLocked == true)
        {
            <div class="alert alert-danger text-center my-4">
                <h4>Tài khoản của bạn đã bị khóa!</h4>
                <p>Vui lòng liên hệ quản trị viên để biết thêm chi tiết.</p>
            </div>
        }
        else
        {
            <h2 class="my-4">Kết Quả Tìm Kiếm: "@ViewBag.TuKhoa"</h2>

           // Đây là dùng Encode() để mã hóa 
           // <h2 class="my-4">Kết Quả Tìm Kiếm: @Html.Encode(ViewBag.TuKhoa)</h2>


            @if (Model.Count == 0)
            {
                <p>Không tìm thấy sản phẩm nào.</p>
            }
            else
            {
                <div class="product-list row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 g-4" id="productList">
                    @foreach (var sanPham in Model)
                    {
                        <div class="col">
                            <div class="product-item h-100">
                                <a href="@Url.Action("ChiTietSanPham", "SanPham", new { id = sanPham.Id })">
                                    <div class="product-image">
                                        @{
                                            string defaultImage = "~/images/logo.png";
                                            string imageUrl = string.IsNullOrEmpty(sanPham.Hinh_Anh) ? defaultImage : sanPham.Hinh_Anh;
                                        }
                                        @*<img src="@Url.Content(imageUrl)" alt="@sanPham.Ten_San_Pham" class="img-fluid">*@

                                        <img src="@Url.Content(imageUrl)" alt="@Html.Encode(sanPham.Ten_San_Pham)" class="img-fluid">
                                    </div>
                                    <p><strong>@sanPham.Ten_San_Pham</strong></p>
                                    @*<p><strong>@Html.Encode(sanPham.Ten_San_Pham)</strong></p>*@
                                    <p style="color:red;">Giảm giá: @sanPham.Giam_Gia?.ToString("N0") VNĐ</p>
                                    <p style="font-weight: bold;">Giá khuyến mãi: @sanPham.Gia_Khuyen_Mai?.ToString("N0") VNĐ</p>
                                </a>
                            </div>
                        </div>
                    }
                </div>

                @if (ViewBag.TotalPages > 1)
                {
                    <nav aria-label="Page navigation" class="mt-4">
                        <ul class="pagination justify-content-center" id="pagination">
                            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" href="#" data-page="@(ViewBag.CurrentPage - 1)">Trước</a>
                            </li>
                            @for (int i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="#" data-page="@i">@i</a>
                                </li>
                            }
                            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                                <a class="page-link" href="#" data-page="@(ViewBag.CurrentPage + 1)">Tiếp</a>
                            </li>
                        </ul>
                    </nav>
                }
            }
        }
    </div>
</main>

<script>

    // Hàm escapeHtml chuyển các ký tự đặc biệt thành thực thể HTML, ví dụ: < thành &lt;, đảm bảo mã JavaScript không thể thực thi.
    function escapeHtml(unsafe) {
        return unsafe
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
    }

    function loadSearchProducts(page, tuKhoa) {
        var url = '@Url.Action("GetSearchProducts", "Home")' + '?tuKhoa=' + encodeURIComponent(tuKhoa) + '&page=' + page;

        fetch(url)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                var productList = document.getElementById('productList');
                productList.innerHTML = ''; // Xóa danh sách cũ

                if (data.isLocked) {
                    productList.innerHTML = '<div class="alert alert-danger text-center">Tài khoản của bạn đã bị khóa!</div>';
                    document.getElementById('pagination').innerHTML = ''; // Xóa phân trang
                } else {
                    data.products.forEach(function (sp) {
                        var html = `
                                <div class="col">
                                    <div class="product-item h-100">
                                        <a href="@Url.Action("ChiTietSanPham", "SanPham")/${sp.id}">
                                            <div class="product-image">
                                                @*<img src="${sp.hinh_Anh}" alt="${sp.ten_San_Pham}" class="img-fluid" onerror="this.src='/images/default-product-image.jpg'"> *@


                                                    <img src="${escapeHtml(sp.hinh_Anh)}" alt="${escapeHtml(sp.ten_San_Pham)}" class="img-fluid" onerror="this.src='/images/default-product-image.jpg'">
                                            </div>
                                            @*<p><strong>${sp.ten_San_Pham}</strong></p>*@

                                                <p><strong>${escapeHtml(sp.ten_San_Pham)}</strong></p>
                                            <p style="color:red;">Giảm giá: ${sp.giam_Gia ? sp.giam_Gia.toLocaleString() : 0} VNĐ</p>
                                                <p style="font-weight: bold;">Giá khuyến mãi: ${(sp.gia_Khuyen_Mai || 0).toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 })} VNĐ</p>
                                        </a>
                                    </div>
                                </div>`;
                        productList.innerHTML += html;
                    });

                    var pagination = document.getElementById('pagination');
                    pagination.innerHTML = '';
                    pagination.innerHTML += `
                            <li class="page-item ${data.currentPage === 1 ? 'disabled' : ''}">
                                <a class="page-link" href="#" data-page="${data.currentPage - 1}">Trước</a>
                            </li>`;
                    for (let i = 1; i <= data.totalPages; i++) {
                        pagination.innerHTML += `
                                <li class="page-item ${i === data.currentPage ? 'active' : ''}">
                                    <a class="page-link" href="#" data-page="${i}">${i}</a>
                                </li>`;
                    }
                    pagination.innerHTML += `
                            <li class="page-item ${data.currentPage === data.totalPages ? 'disabled' : ''}">
                                <a class="page-link" href="#" data-page="${data.currentPage + 1}">Tiếp</a>
                            </li>`;

                    attachPaginationEvents(tuKhoa);
                }
            })
            .catch(error => console.error('Error fetching search products:', error));
    }

    function attachPaginationEvents(tuKhoa) {
        var paginationLinks = document.querySelectorAll('#pagination .page-link');
        paginationLinks.forEach(function (link) {
            link.addEventListener('click', function (e) {
                e.preventDefault();
                var page = this.getAttribute('data-page');
                loadSearchProducts(page, tuKhoa);
            });
        });
    }

    document.addEventListener('DOMContentLoaded', function () {

        //var tuKhoa = '@Html.Raw(ViewBag.TuKhoa)';

        // Dùng Encode() để mã hóa 
        //var tuKhoa = @Html.Raw(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(ViewBag.TuKhoa?.ToString() ?? ""));
        var tuKhoa = "@(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(ViewBag.TuKhoa?.ToString() ?? ""))";



        var initialPage = @Html.Raw(ViewBag.CurrentPage ?? 1);
        attachPaginationEvents(tuKhoa);
    });
</script>